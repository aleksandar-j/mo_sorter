
import os
import tkinter
import base64

import mo_read
import sort

SORT_MODS_BTN_TEXT = "Sort Mods"
HELP_BTN_TEXT = "Help"
NO_PROFILES_MESSAGE = "You don't have any profiles!"
HELP_MESSAGE = f"Select the profile whose modlist (left panel) you wish to clone. Press {SORT_MODS_BTN_TEXT}."

def tk_setup_icon(root):
    """ 
        Probably not the cleanest icon loading solution, but at least .ico file does not have to be supplied
    """
    ICON_BYTES = base64.b64decode("""AAABAAEAEBAAAAAACABoBQAAFgAAACgkAEAAP//AACQAQAAkAEAAP//AACQAQAAkAEAAP//AACQAQAAkAEAAP//AACQAQAAkAEAAP//AAA=""")
    ICON_PATH_TMP = "icon_temp.ico"
    with open(ICON_PATH_TMP, "wb") as icon_file:
        icon_file.write(ICON_BYTES)
    root.iconbitmap(ICON_PATH_TMP)
    os.remove(ICON_PATH_TMP)

def main():
    root = tkinter.Tk()
    root.wm_title("Mod Organizer Sorter")
    root.minsize(310, 122)

    tk_setup_icon(root)

    frame = tkinter.Frame(root)
    frame.pack()

    mo_path = mo_read.get_path()
    mo_profiles = mo_read.get_profiles(mo_path)
    mo_profile_active = mo_read.get_profile_active(mo_path)
    
    if not mo_profiles:
        tkinter.messagebox.showinfo("Error", NO_PROFILES_MESSAGE)
        exit()

    option = tkinter.StringVar(frame, value=mo_profile_active)
    profile_pick = tkinter.OptionMenu(frame, option, *tuple(mo_profiles))
    profile_pick.pack()

    sort_button = tkinter.Button(frame, text=SORT_MODS_BTN_TEXT, fg="red", padx=40, pady=10,
                    command=lambda:sort.sort(mo_path, option.get(), mo_profiles, root))
    sort_button.pack()

    help_button = tkinter.Button(frame, text=HELP_BTN_TEXT,
                    command=lambda:tkinter.messagebox.showinfo("Help", HELP_MESSAGE))
    help_button.pack(side=tkinter.LEFT, pady=10)

    root.mainloop()

if __name__ == "__main__":
    main()
